{
  "version": 3,
  "file": "ngx-progressbar-core.js",
  "sources": [
    "ng://@ngx-progressbar/core/out/ng-progress.module.ts",
    "ng://@ngx-progressbar/core/out/ng-progress.component.ts",
    "ng://@ngx-progressbar/core/out/ng-progress.service.ts",
    "ng://@ngx-progressbar/core/out/ng-progress.token.ts",
    "ng://@ngx-progressbar/core/out/ng-progress-ref.ts"
  ],
  "sourcesContent": [
    "import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgProgressComponent } from './ng-progress.component';\r\nimport { NgProgress } from './ng-progress.service';\r\nimport { NgProgressConfig } from './ng-progress.interface';\r\nimport { CONFIG } from './ng-progress.token';\r\n\r\nexport function NgProgressFactory(config: NgProgressConfig) {\r\n  return new NgProgress(config);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [NgProgressComponent],\r\n  exports: [NgProgressComponent],\r\n  imports: [CommonModule]\r\n})\r\nexport class NgProgressModule {\r\n  static forRoot(config?: NgProgressConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgProgressModule,\r\n      providers: [\r\n        {provide: CONFIG, useValue: config},\r\n        {\r\n          provide: NgProgress,\r\n          useFactory: NgProgressFactory,\r\n          deps: [CONFIG]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n",
    "/**\r\n * @license\r\n * Copyright ngx-progressbar All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/MurhafSousli/ngx-progressbar/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ChangeDetectionStrategy,\r\n  EventEmitter,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { NgProgress } from './ng-progress.service';\r\nimport { NgProgressRef } from './ng-progress-ref';\r\nimport { NgProgressState } from './ng-progress.interface';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { map } from 'rxjs/operators/map';\r\n\r\n@Component({\r\n  selector: 'ng-progress',\r\n  host: {\r\n    'role': 'progressbar',\r\n    '[attr.spinnerPosition]': 'spinnerPosition',\r\n    '[attr.dir]': 'direction',\r\n    '[attr.thick]': 'thick'\r\n  },\r\n  template: `\r\n    <ng-container *ngIf=\"state$ | async; let state\">\r\n      <div class=\"ng-progress-bar\"\r\n            [class.-active]=\"state.active\"\r\n            [style.transition]=\"'opacity ' + speed + 'ms ' + ease\">\r\n        <div class=\"ng-bar-placeholder\">\r\n          <div class=\"ng-bar\"\r\n                [style.transform]=\"state.transform\"\r\n                [style.backgroundColor]=\"color\"\r\n                [style.transition]=\"state.active ? 'all ' + speed + 'ms ' + ease : 'none'\">\r\n            <div *ngIf=\"meteor\" class=\"ng-meteor\" [style.boxShadow]=\"'0 0 10px '+ color + ', 0 0 5px ' + color\"></div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"spinner\" class=\"ng-spinner\">\r\n          <div class=\"ng-spinner-icon\"\r\n                [style.borderTopColor]=\"color\"\r\n                [style.borderLeftColor]=\"color\"></div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  `,\r\n  styles: [`ng-progress{\n  z-index:999999;\n  pointer-events:none;\n  position:relative; }\n\n.ng-progress-bar{\n  z-index:999999;\n  top:0;\n  left:0;\n  width:100%;\n  position:fixed;\n  zoom:1;\n  filter:alpha(opacity=0);\n  opacity:0; }\n  .ng-progress-bar.-active{\n    filter:alpha(opacity=100);\n    opacity:1;\n    -webkit-transition:none;\n    transition:none; }\n\n.ng-bar-placeholder{\n  position:absolute;\n  height:2px;\n  width:100%; }\n\n.ng-bar{\n  width:100%;\n  height:100%;\n  -webkit-transform:translate(-100%, 0, 0);\n          transform:translate(-100%, 0, 0); }\n\n.ng-meteor{\n  display:block;\n  position:absolute;\n  width:100px;\n  height:100%;\n  opacity:1; }\n\n.ng-spinner{\n  display:block;\n  position:fixed;\n  z-index:1031;\n  top:15px; }\n\n.ng-spinner-icon{\n  width:18px;\n  height:18px;\n  -webkit-box-sizing:border-box;\n          box-sizing:border-box;\n  -webkit-animation:spinner-animation 400ms linear infinite;\n          animation:spinner-animation 400ms linear infinite;\n  border:2px solid transparent;\n  border-radius:50%; }\n\n[dir='ltr+'] .ng-meteor, [dir='ltr-'] .ng-meteor{\n  -webkit-transform:rotate(3deg);\n          transform:rotate(3deg); }\n\n[dir='ltr+'][thick='true'] .ng-meteor, [dir='ltr-'][thick='true'] .ng-meteor{\n  -webkit-transform:rotate(4deg);\n          transform:rotate(4deg); }\n\n[dir='ltr+'] .ng-bar, [dir='rtl+'] .ng-bar{\n  margin-left:-100%; }\n\n[dir='ltr+'] .ng-meteor, [dir='rtl+'] .ng-meteor{\n  right:0; }\n\n[dir='ltr+'] .ng-meteor, [dir='rtl-'] .ng-meteor{\n  top:-3px; }\n\n[dir='ltr+'][thick='true'] .ng-meteor, [dir='rtl-'][thick='true'] .ng-meteor{\n  top:-4px; }\n\n[dir='ltr-'] .ng-meteor, [dir='rtl+'] .ng-meteor{\n  bottom:-3px; }\n\n[dir='ltr-'][thick='true'] .ng-meteor, [dir='rtl+'][thick='true'] .ng-meteor{\n  bottom:-4px; }\n\n[dir='ltr-'] .ng-bar-placeholder, [dir='rtl+'] .ng-bar-placeholder{\n  -webkit-transform:rotate(180deg);\n          transform:rotate(180deg); }\n\n[dir='ltr-'] .ng-spinner-icon, [dir='rtl+'] .ng-spinner-icon{\n  animation-direction:reverse; }\n\n[dir='rtl+'] .ng-meteor, [dir='rtl-'] .ng-meteor{\n  -webkit-transform:rotate(-3deg);\n          transform:rotate(-3deg); }\n\n[dir='rtl+'][thick='true'] .ng-meteor, [dir='rtl-'][thick='true'] .ng-meteor{\n  -webkit-transform:rotate(-4deg);\n          transform:rotate(-4deg); }\n\n[thick='true'] .ng-spinner-icon{\n  width:24px;\n  height:24px;\n  border-width:3px; }\n\n[thick='true'] .ng-bar-placeholder{\n  height:3px; }\n\n[spinnerPosition='left'] .ng-spinner{\n  left:15px;\n  right:unset; }\n\n[spinnerPosition='right'] .ng-spinner{\n  right:15px; }\n\n@-webkit-keyframes spinner-animation{\n  0%{\n    -webkit-transform:rotate(0deg);\n            transform:rotate(0deg); }\n  100%{\n    -webkit-transform:rotate(360deg);\n            transform:rotate(360deg); } }\n\n@keyframes spinner-animation{\n  0%{\n    -webkit-transform:rotate(0deg);\n            transform:rotate(0deg); }\n  100%{\n    -webkit-transform:rotate(360deg);\n            transform:rotate(360deg); } }\n`],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\n\r\nexport class NgProgressComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  private _started$: Subscription;\r\n  private _completed$: Subscription;\r\n\r\n  /** Progress bar worker */\r\n  progressRef: NgProgressRef;\r\n\r\n  /** Progress state stream */\r\n  state$: Observable<{ active: boolean, transform: string }>;\r\n\r\n  /** Creates a new instance if id is not already exists */\r\n  @Input() id = 'root';\r\n\r\n  /** Initializes inputs from the global config */\r\n  @Input() spinnerPosition: 'left' | 'right' = this._ngProgress.config.spinnerPosition;\r\n  @Input() direction: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-' = this._ngProgress.config.direction;\r\n  @Input() ease: string = this._ngProgress.config.ease;\r\n  @Input() color: string = this._ngProgress.config.color;\r\n  @Input() meteor: boolean = this._ngProgress.config.meteor;\r\n  @Input() spinner: boolean = this._ngProgress.config.spinner;\r\n  @Input() thick: boolean = this._ngProgress.config.thick;\r\n  @Input() max: number = this._ngProgress.config.max;\r\n  @Input() min: number = this._ngProgress.config.min;\r\n  @Input() speed: number = this._ngProgress.config.speed;\r\n  @Input() trickleSpeed: number = this._ngProgress.config.trickleSpeed;\r\n\r\n  @Output() started = new EventEmitter();\r\n  @Output() completed = new EventEmitter();\r\n\r\n  constructor(private _ngProgress: NgProgress) {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.progressRef instanceof NgProgressRef) {\r\n      // Update progress bar config when input changes\r\n      this.progressRef.setConfig({\r\n        max: (this.max > 0 && this.max <= 100) ? this.max : 100,\r\n        min: (this.min < 100 && this.min >= 0) ? this.min : 0,\r\n        speed: this.speed,\r\n        trickleSpeed: this.trickleSpeed,\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get progress bar service instance\r\n    this.progressRef = this._ngProgress.ref(this.id, {\r\n      max: this.max,\r\n      min: this.min,\r\n      speed: this.speed,\r\n      trickleSpeed: this.trickleSpeed,\r\n    });\r\n    this.state$ = this.progressRef.state$.pipe(map((state: NgProgressState) => ({\r\n      active: state.active,\r\n      transform: `translate3d(${state.value}%,0,0)`\r\n    })));\r\n    /** Subscribes to started and completed events when user used them */\r\n    if (this.started.observers.length) {\r\n      this._started$ = this.progressRef.started.subscribe(() => this.started.next());\r\n    }\r\n    if (this.completed.observers.length) {\r\n      this._completed$ = this.progressRef.completed.subscribe(() => this.completed.next());\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._started$) {\r\n      this._started$.unsubscribe();\r\n    }\r\n    if (this._completed$) {\r\n      this._completed$.unsubscribe();\r\n    }\r\n    this._ngProgress.destroy(this.id);\r\n  }\r\n\r\n  start() {\r\n    this.progressRef.start();\r\n  }\r\n\r\n  complete() {\r\n    this.progressRef.complete();\r\n  }\r\n\r\n  inc(n?: number) {\r\n    this.progressRef.inc(n);\r\n  }\r\n\r\n  set(n: number) {\r\n    this.progressRef.set(n);\r\n  }\r\n\r\n  get isStarted() {\r\n    return this.progressRef.isStarted;\r\n  }\r\n}\r\n",
    "import { Injectable, Inject, Optional } from '@angular/core';\r\nimport { NgProgressRef } from './ng-progress-ref';\r\nimport { NgProgressConfig } from './ng-progress.interface';\r\nimport { empty } from 'rxjs/observable/empty';\r\nimport { CONFIG } from './ng-progress.token';\r\n\r\nconst defaultConfig: NgProgressConfig = {\r\n  meteor: true,\r\n  spinner: true,\r\n  thick: false,\r\n  ease: 'linear',\r\n  spinnerPosition: 'right',\r\n  direction: 'ltr+',\r\n  color: '#1B95E0',\r\n  max: 100,\r\n  min: 8,\r\n  speed: 200,\r\n  trickleSpeed: 300\r\n};\r\n\r\n@Injectable()\r\nexport class NgProgress {\r\n\r\n  /** Stores NgProgressRef instances */\r\n  private readonly _instances = {};\r\n\r\n  /** Global config */\r\n  config: NgProgressConfig;\r\n\r\n  constructor(@Optional() @Inject(CONFIG) config: NgProgressConfig) {\r\n    this.config = {...defaultConfig, ...config};\r\n  }\r\n\r\n  /**\r\n   * Returns NgProgressRef by ID\r\n   */\r\n  ref(id = 'root', config?: NgProgressConfig) {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      return this._instances[id];\r\n    } else {\r\n      config = {...this.config, ...config};\r\n      return this._instances[id] = new NgProgressRef(config);\r\n    }\r\n  }\r\n\r\n  setConfig(config: NgProgressConfig, id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].setConfig(config);\r\n    }\r\n  }\r\n\r\n  start(id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].start();\r\n    }\r\n  }\r\n\r\n  set(n: number, id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].set(n);\r\n    }\r\n  }\r\n\r\n  inc(n?: number, id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].inc(n);\r\n    }\r\n  }\r\n\r\n  complete(id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].complete();\r\n    }\r\n  }\r\n\r\n  isStarted(id = 'root') {\r\n    return (this._instances[id] instanceof NgProgressRef) ? this._instances[id].isStarted : false;\r\n  }\r\n\r\n  started(id = 'root') {\r\n    return (this._instances[id] instanceof NgProgressRef) ? this._instances[id].started : empty();\r\n  }\r\n\r\n  completed(id = 'root') {\r\n    return (this._instances[id] instanceof NgProgressRef) ? this._instances[id].ended : empty();\r\n  }\r\n\r\n  destroy(id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].destroy();\r\n      this._instances[id] = null;\r\n    }\r\n  }\r\n\r\n  destroyAll() {\r\n    Object.keys(this._instances).map((key) => {\r\n      this._instances[key].destroy();\r\n      this._instances[key] = null;\r\n    });\r\n  }\r\n}\r\n",
    "import { InjectionToken } from '@angular/core';\r\nimport { NgProgressConfig } from './ng-progress.interface';\r\n\r\nexport const CONFIG = new InjectionToken<NgProgressConfig>('config');\r\n",
    "import { NgProgressState, NgProgressConfig } from './ng-progress.interface';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { timer } from 'rxjs/observable/timer';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { tap } from 'rxjs/operators/tap';\r\nimport { map } from 'rxjs/operators/map';\r\nimport { skip } from 'rxjs/operators/skip';\r\nimport { delay } from 'rxjs/operators/delay';\r\nimport { filter } from 'rxjs/operators/filter';\r\nimport { switchMap } from 'rxjs/operators/switchMap';\r\nimport { combineLatest} from 'rxjs/operators/combineLatest';\r\nimport { distinctUntilChanged } from 'rxjs/operators/distinctUntilChanged';\r\n\r\nexport class NgProgressRef {\r\n\r\n  private _state: NgProgressState = {active: false, value: 0};\r\n  private _config: NgProgressConfig;\r\n\r\n  /** Worker subscription used to unsubscribe from trickling$ stream */\r\n  private _workerSub$: Subscription;\r\n\r\n  /** Stream that increments and updates progress state */\r\n  private _trickling$ = new Subject();\r\n\r\n  /** Stream that emits when progress state is changed */\r\n  state$ = new BehaviorSubject<NgProgressState>(this._state);\r\n\r\n  /** Stream that emits when config is changed */\r\n  config$ = new Subject<NgProgressConfig>();\r\n\r\n  get isStarted(): boolean {\r\n    return this._state.active;\r\n  }\r\n\r\n  /** Progress start event */\r\n  get started(): Observable<boolean> {\r\n    return this.state$.pipe(\r\n      map((state: NgProgressState) => state.active),\r\n      distinctUntilChanged(),\r\n      filter(active => active)\r\n    );\r\n  }\r\n\r\n  /** Progress ended event */\r\n  get completed(): Observable<boolean> {\r\n    return this.state$.pipe(\r\n      map((state: NgProgressState) => state.active),\r\n      distinctUntilChanged(),\r\n      filter(active => !active),\r\n      skip(1)\r\n    );\r\n  }\r\n\r\n  constructor(config: NgProgressConfig) {\r\n\r\n    /**\r\n     * Trickling stream starts the timer that increment the progress bar continuously\r\n     * This stream makes it possible to use latest config values while incrementing\r\n     */\r\n    this._workerSub$ = this._trickling$.pipe(\r\n      combineLatest(this.config$),\r\n      switchMap(([start, latestConfig]) => start ? this._trickling(latestConfig) : this._complete(latestConfig))\r\n    ).subscribe();\r\n\r\n    this.setConfig(config);\r\n  }\r\n\r\n  start() {\r\n    if (!this.isStarted) {\r\n      this.set(this._config.min);\r\n    }\r\n    this._trickling$.next(true);\r\n  }\r\n\r\n  complete() {\r\n    if (this.isStarted) {\r\n      this._trickling$.next(false);\r\n    }\r\n  }\r\n\r\n  inc(amount?: number) {\r\n\r\n    let n = this._state.value;\r\n\r\n    if (!this.isStarted) {\r\n      this.start();\r\n    } else {\r\n      if (typeof amount !== 'number') {\r\n        if (n >= 0 && n < 20) {\r\n          amount = 10;\r\n        } else if (n >= 20 && n < 50) {\r\n          amount = 4;\r\n        } else if (n >= 50 && n < 80) {\r\n          amount = 2;\r\n        } else if (n >= 80 && n < 99) {\r\n          amount = 0.5;\r\n        } else {\r\n          amount = 0;\r\n        }\r\n      }\r\n      n = this._clamp(n + amount);\r\n      this.set(n);\r\n    }\r\n  }\r\n\r\n  set(n: number) {\r\n    this._setState({value: this._clamp(n), active: true});\r\n  }\r\n\r\n  setConfig(config: NgProgressConfig) {\r\n    this._config = {...this._config, ...config};\r\n    this.config$.next(this._config);\r\n  }\r\n\r\n  /**\r\n   * Meant to be used internally and not by user directly\r\n   * Users should use NgProgressManager.destroy(id) instead\r\n   */\r\n  destroy() {\r\n    this._workerSub$.unsubscribe();\r\n    this._trickling$.unsubscribe();\r\n    this.state$.unsubscribe();\r\n    this.config$.unsubscribe();\r\n  }\r\n\r\n  private _setState(state: NgProgressState) {\r\n    this._state = {...this._state, ...state};\r\n    this.state$.next(this._state);\r\n  }\r\n\r\n  /** Clamps a value to be between min and max */\r\n  private _clamp(n): number {\r\n    return Math.max(this._config.min, Math.min(this._config.max, n));\r\n  }\r\n\r\n  /** Keeps incrementing the progress */\r\n  private _trickling(config: NgProgressConfig) {\r\n    return timer(0, config.trickleSpeed).pipe(tap(() => this.inc()));\r\n  }\r\n\r\n  /** Completes then resets the progress */\r\n  private _complete(config: NgProgressConfig) {\r\n    return of({}).pipe(\r\n      // Completes the progress\r\n      tap(() => this._setState({value: 100})),\r\n\r\n      // Hides the progress bar after a tiny delay\r\n      delay(config.speed * 1.7),\r\n      tap(() => this._setState({active: false})),\r\n\r\n      // Resets the progress state\r\n      delay(config.speed),\r\n      tap(() => this._setState({value: 0}))\r\n    );\r\n  }\r\n}\r\n"
  ],
  "names": [],
  "mappings": "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"
}
