{
  "version": 3,
  "file": "ngx-progressbar-core.umd.min.js",
  "sources": [
    "ng://@ngx-progressbar/core/out/ng-progress.component.ts",
    "ng://@ngx-progressbar/core/out/ng-progress-ref.ts",
    "ng://@ngx-progressbar/core/node_modules/tslib/tslib.es6.js",
    "ng://@ngx-progressbar/core/out/ng-progress.service.ts"
  ],
  "sourcesContent": [
    "/**\r\n * @license\r\n * Copyright ngx-progressbar All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/MurhafSousli/ngx-progressbar/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ChangeDetectionStrategy,\r\n  EventEmitter,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { NgProgress } from './ng-progress.service';\r\nimport { NgProgressRef } from './ng-progress-ref';\r\nimport { NgProgressState } from './ng-progress.interface';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { map } from 'rxjs/operators/map';\r\n\r\n@Component({\r\n  selector: 'ng-progress',\r\n  host: {\r\n    'role': 'progressbar',\r\n    '[attr.spinnerPosition]': 'spinnerPosition',\r\n    '[attr.dir]': 'direction',\r\n    '[attr.thick]': 'thick'\r\n  },\r\n  template: `\r\n    <ng-container *ngIf=\"state$ | async; let state\">\r\n      <div class=\"ng-progress-bar\"\r\n            [class.-active]=\"state.active\"\r\n            [style.transition]=\"'opacity ' + speed + 'ms ' + ease\">\r\n        <div class=\"ng-bar-placeholder\">\r\n          <div class=\"ng-bar\"\r\n                [style.transform]=\"state.transform\"\r\n                [style.backgroundColor]=\"color\"\r\n                [style.transition]=\"state.active ? 'all ' + speed + 'ms ' + ease : 'none'\">\r\n            <div *ngIf=\"meteor\" class=\"ng-meteor\" [style.boxShadow]=\"'0 0 10px '+ color + ', 0 0 5px ' + color\"></div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"spinner\" class=\"ng-spinner\">\r\n          <div class=\"ng-spinner-icon\"\r\n                [style.borderTopColor]=\"color\"\r\n                [style.borderLeftColor]=\"color\"></div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  `,\r\n  styles: [`ng-progress{\n  z-index:999999;\n  pointer-events:none;\n  position:relative; }\n\n.ng-progress-bar{\n  z-index:999999;\n  top:0;\n  left:0;\n  width:100%;\n  position:fixed;\n  zoom:1;\n  filter:alpha(opacity=0);\n  opacity:0; }\n  .ng-progress-bar.-active{\n    filter:alpha(opacity=100);\n    opacity:1;\n    -webkit-transition:none;\n    transition:none; }\n\n.ng-bar-placeholder{\n  position:absolute;\n  height:2px;\n  width:100%; }\n\n.ng-bar{\n  width:100%;\n  height:100%;\n  -webkit-transform:translate(-100%, 0, 0);\n          transform:translate(-100%, 0, 0); }\n\n.ng-meteor{\n  display:block;\n  position:absolute;\n  width:100px;\n  height:100%;\n  opacity:1; }\n\n.ng-spinner{\n  display:block;\n  position:fixed;\n  z-index:1031;\n  top:15px; }\n\n.ng-spinner-icon{\n  width:18px;\n  height:18px;\n  -webkit-box-sizing:border-box;\n          box-sizing:border-box;\n  -webkit-animation:spinner-animation 400ms linear infinite;\n          animation:spinner-animation 400ms linear infinite;\n  border:2px solid transparent;\n  border-radius:50%; }\n\n[dir='ltr+'] .ng-meteor, [dir='ltr-'] .ng-meteor{\n  -webkit-transform:rotate(3deg);\n          transform:rotate(3deg); }\n\n[dir='ltr+'][thick='true'] .ng-meteor, [dir='ltr-'][thick='true'] .ng-meteor{\n  -webkit-transform:rotate(4deg);\n          transform:rotate(4deg); }\n\n[dir='ltr+'] .ng-bar, [dir='rtl+'] .ng-bar{\n  margin-left:-100%; }\n\n[dir='ltr+'] .ng-meteor, [dir='rtl+'] .ng-meteor{\n  right:0; }\n\n[dir='ltr+'] .ng-meteor, [dir='rtl-'] .ng-meteor{\n  top:-3px; }\n\n[dir='ltr+'][thick='true'] .ng-meteor, [dir='rtl-'][thick='true'] .ng-meteor{\n  top:-4px; }\n\n[dir='ltr-'] .ng-meteor, [dir='rtl+'] .ng-meteor{\n  bottom:-3px; }\n\n[dir='ltr-'][thick='true'] .ng-meteor, [dir='rtl+'][thick='true'] .ng-meteor{\n  bottom:-4px; }\n\n[dir='ltr-'] .ng-bar-placeholder, [dir='rtl+'] .ng-bar-placeholder{\n  -webkit-transform:rotate(180deg);\n          transform:rotate(180deg); }\n\n[dir='ltr-'] .ng-spinner-icon, [dir='rtl+'] .ng-spinner-icon{\n  animation-direction:reverse; }\n\n[dir='rtl+'] .ng-meteor, [dir='rtl-'] .ng-meteor{\n  -webkit-transform:rotate(-3deg);\n          transform:rotate(-3deg); }\n\n[dir='rtl+'][thick='true'] .ng-meteor, [dir='rtl-'][thick='true'] .ng-meteor{\n  -webkit-transform:rotate(-4deg);\n          transform:rotate(-4deg); }\n\n[thick='true'] .ng-spinner-icon{\n  width:24px;\n  height:24px;\n  border-width:3px; }\n\n[thick='true'] .ng-bar-placeholder{\n  height:3px; }\n\n[spinnerPosition='left'] .ng-spinner{\n  left:15px;\n  right:unset; }\n\n[spinnerPosition='right'] .ng-spinner{\n  right:15px; }\n\n@-webkit-keyframes spinner-animation{\n  0%{\n    -webkit-transform:rotate(0deg);\n            transform:rotate(0deg); }\n  100%{\n    -webkit-transform:rotate(360deg);\n            transform:rotate(360deg); } }\n\n@keyframes spinner-animation{\n  0%{\n    -webkit-transform:rotate(0deg);\n            transform:rotate(0deg); }\n  100%{\n    -webkit-transform:rotate(360deg);\n            transform:rotate(360deg); } }\n`],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\n\r\nexport class NgProgressComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  private _started$: Subscription;\r\n  private _completed$: Subscription;\r\n\r\n  /** Progress bar worker */\r\n  progressRef: NgProgressRef;\r\n\r\n  /** Progress state stream */\r\n  state$: Observable<{ active: boolean, transform: string }>;\r\n\r\n  /** Creates a new instance if id is not already exists */\r\n  @Input() id = 'root';\r\n\r\n  /** Initializes inputs from the global config */\r\n  @Input() spinnerPosition: 'left' | 'right' = this._ngProgress.config.spinnerPosition;\r\n  @Input() direction: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-' = this._ngProgress.config.direction;\r\n  @Input() ease: string = this._ngProgress.config.ease;\r\n  @Input() color: string = this._ngProgress.config.color;\r\n  @Input() meteor: boolean = this._ngProgress.config.meteor;\r\n  @Input() spinner: boolean = this._ngProgress.config.spinner;\r\n  @Input() thick: boolean = this._ngProgress.config.thick;\r\n  @Input() max: number = this._ngProgress.config.max;\r\n  @Input() min: number = this._ngProgress.config.min;\r\n  @Input() speed: number = this._ngProgress.config.speed;\r\n  @Input() trickleSpeed: number = this._ngProgress.config.trickleSpeed;\r\n\r\n  @Output() started = new EventEmitter();\r\n  @Output() completed = new EventEmitter();\r\n\r\n  constructor(private _ngProgress: NgProgress) {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.progressRef instanceof NgProgressRef) {\r\n      // Update progress bar config when input changes\r\n      this.progressRef.setConfig({\r\n        max: (this.max > 0 && this.max <= 100) ? this.max : 100,\r\n        min: (this.min < 100 && this.min >= 0) ? this.min : 0,\r\n        speed: this.speed,\r\n        trickleSpeed: this.trickleSpeed,\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get progress bar service instance\r\n    this.progressRef = this._ngProgress.ref(this.id, {\r\n      max: this.max,\r\n      min: this.min,\r\n      speed: this.speed,\r\n      trickleSpeed: this.trickleSpeed,\r\n    });\r\n    this.state$ = this.progressRef.state$.pipe(map((state: NgProgressState) => ({\r\n      active: state.active,\r\n      transform: `translate3d(${state.value}%,0,0)`\r\n    })));\r\n    /** Subscribes to started and completed events when user used them */\r\n    if (this.started.observers.length) {\r\n      this._started$ = this.progressRef.started.subscribe(() => this.started.next());\r\n    }\r\n    if (this.completed.observers.length) {\r\n      this._completed$ = this.progressRef.completed.subscribe(() => this.completed.next());\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._started$) {\r\n      this._started$.unsubscribe();\r\n    }\r\n    if (this._completed$) {\r\n      this._completed$.unsubscribe();\r\n    }\r\n    this._ngProgress.destroy(this.id);\r\n  }\r\n\r\n  start() {\r\n    this.progressRef.start();\r\n  }\r\n\r\n  complete() {\r\n    this.progressRef.complete();\r\n  }\r\n\r\n  inc(n?: number) {\r\n    this.progressRef.inc(n);\r\n  }\r\n\r\n  set(n: number) {\r\n    this.progressRef.set(n);\r\n  }\r\n\r\n  get isStarted() {\r\n    return this.progressRef.isStarted;\r\n  }\r\n}\r\n",
    "import { NgProgressState, NgProgressConfig } from './ng-progress.interface';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { timer } from 'rxjs/observable/timer';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { tap } from 'rxjs/operators/tap';\r\nimport { map } from 'rxjs/operators/map';\r\nimport { skip } from 'rxjs/operators/skip';\r\nimport { delay } from 'rxjs/operators/delay';\r\nimport { filter } from 'rxjs/operators/filter';\r\nimport { switchMap } from 'rxjs/operators/switchMap';\r\nimport { combineLatest} from 'rxjs/operators/combineLatest';\r\nimport { distinctUntilChanged } from 'rxjs/operators/distinctUntilChanged';\r\n\r\nexport class NgProgressRef {\r\n\r\n  private _state: NgProgressState = {active: false, value: 0};\r\n  private _config: NgProgressConfig;\r\n\r\n  /** Worker subscription used to unsubscribe from trickling$ stream */\r\n  private _workerSub$: Subscription;\r\n\r\n  /** Stream that increments and updates progress state */\r\n  private _trickling$ = new Subject();\r\n\r\n  /** Stream that emits when progress state is changed */\r\n  state$ = new BehaviorSubject<NgProgressState>(this._state);\r\n\r\n  /** Stream that emits when config is changed */\r\n  config$ = new Subject<NgProgressConfig>();\r\n\r\n  get isStarted(): boolean {\r\n    return this._state.active;\r\n  }\r\n\r\n  /** Progress start event */\r\n  get started(): Observable<boolean> {\r\n    return this.state$.pipe(\r\n      map((state: NgProgressState) => state.active),\r\n      distinctUntilChanged(),\r\n      filter(active => active)\r\n    );\r\n  }\r\n\r\n  /** Progress ended event */\r\n  get completed(): Observable<boolean> {\r\n    return this.state$.pipe(\r\n      map((state: NgProgressState) => state.active),\r\n      distinctUntilChanged(),\r\n      filter(active => !active),\r\n      skip(1)\r\n    );\r\n  }\r\n\r\n  constructor(config: NgProgressConfig) {\r\n\r\n    /**\r\n     * Trickling stream starts the timer that increment the progress bar continuously\r\n     * This stream makes it possible to use latest config values while incrementing\r\n     */\r\n    this._workerSub$ = this._trickling$.pipe(\r\n      combineLatest(this.config$),\r\n      switchMap(([start, latestConfig]) => start ? this._trickling(latestConfig) : this._complete(latestConfig))\r\n    ).subscribe();\r\n\r\n    this.setConfig(config);\r\n  }\r\n\r\n  start() {\r\n    if (!this.isStarted) {\r\n      this.set(this._config.min);\r\n    }\r\n    this._trickling$.next(true);\r\n  }\r\n\r\n  complete() {\r\n    if (this.isStarted) {\r\n      this._trickling$.next(false);\r\n    }\r\n  }\r\n\r\n  inc(amount?: number) {\r\n\r\n    let n = this._state.value;\r\n\r\n    if (!this.isStarted) {\r\n      this.start();\r\n    } else {\r\n      if (typeof amount !== 'number') {\r\n        if (n >= 0 && n < 20) {\r\n          amount = 10;\r\n        } else if (n >= 20 && n < 50) {\r\n          amount = 4;\r\n        } else if (n >= 50 && n < 80) {\r\n          amount = 2;\r\n        } else if (n >= 80 && n < 99) {\r\n          amount = 0.5;\r\n        } else {\r\n          amount = 0;\r\n        }\r\n      }\r\n      n = this._clamp(n + amount);\r\n      this.set(n);\r\n    }\r\n  }\r\n\r\n  set(n: number) {\r\n    this._setState({value: this._clamp(n), active: true});\r\n  }\r\n\r\n  setConfig(config: NgProgressConfig) {\r\n    this._config = {...this._config, ...config};\r\n    this.config$.next(this._config);\r\n  }\r\n\r\n  /**\r\n   * Meant to be used internally and not by user directly\r\n   * Users should use NgProgressManager.destroy(id) instead\r\n   */\r\n  destroy() {\r\n    this._workerSub$.unsubscribe();\r\n    this._trickling$.unsubscribe();\r\n    this.state$.unsubscribe();\r\n    this.config$.unsubscribe();\r\n  }\r\n\r\n  private _setState(state: NgProgressState) {\r\n    this._state = {...this._state, ...state};\r\n    this.state$.next(this._state);\r\n  }\r\n\r\n  /** Clamps a value to be between min and max */\r\n  private _clamp(n): number {\r\n    return Math.max(this._config.min, Math.min(this._config.max, n));\r\n  }\r\n\r\n  /** Keeps incrementing the progress */\r\n  private _trickling(config: NgProgressConfig) {\r\n    return timer(0, config.trickleSpeed).pipe(tap(() => this.inc()));\r\n  }\r\n\r\n  /** Completes then resets the progress */\r\n  private _complete(config: NgProgressConfig) {\r\n    return of({}).pipe(\r\n      // Completes the progress\r\n      tap(() => this._setState({value: 100})),\r\n\r\n      // Hides the progress bar after a tiny delay\r\n      delay(config.speed * 1.7),\r\n      tap(() => this._setState({active: false})),\r\n\r\n      // Resets the progress state\r\n      delay(config.speed),\r\n      tap(() => this._setState({value: 0}))\r\n    );\r\n  }\r\n}\r\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n",
    "import { Injectable, Inject, Optional } from '@angular/core';\r\nimport { NgProgressRef } from './ng-progress-ref';\r\nimport { NgProgressConfig } from './ng-progress.interface';\r\nimport { empty } from 'rxjs/observable/empty';\r\nimport { CONFIG } from './ng-progress.token';\r\n\r\nconst defaultConfig: NgProgressConfig = {\r\n  meteor: true,\r\n  spinner: true,\r\n  thick: false,\r\n  ease: 'linear',\r\n  spinnerPosition: 'right',\r\n  direction: 'ltr+',\r\n  color: '#1B95E0',\r\n  max: 100,\r\n  min: 8,\r\n  speed: 200,\r\n  trickleSpeed: 300\r\n};\r\n\r\n@Injectable()\r\nexport class NgProgress {\r\n\r\n  /** Stores NgProgressRef instances */\r\n  private readonly _instances = {};\r\n\r\n  /** Global config */\r\n  config: NgProgressConfig;\r\n\r\n  constructor(@Optional() @Inject(CONFIG) config: NgProgressConfig) {\r\n    this.config = {...defaultConfig, ...config};\r\n  }\r\n\r\n  /**\r\n   * Returns NgProgressRef by ID\r\n   */\r\n  ref(id = 'root', config?: NgProgressConfig) {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      return this._instances[id];\r\n    } else {\r\n      config = {...this.config, ...config};\r\n      return this._instances[id] = new NgProgressRef(config);\r\n    }\r\n  }\r\n\r\n  setConfig(config: NgProgressConfig, id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].setConfig(config);\r\n    }\r\n  }\r\n\r\n  start(id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].start();\r\n    }\r\n  }\r\n\r\n  set(n: number, id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].set(n);\r\n    }\r\n  }\r\n\r\n  inc(n?: number, id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].inc(n);\r\n    }\r\n  }\r\n\r\n  complete(id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].complete();\r\n    }\r\n  }\r\n\r\n  isStarted(id = 'root') {\r\n    return (this._instances[id] instanceof NgProgressRef) ? this._instances[id].isStarted : false;\r\n  }\r\n\r\n  started(id = 'root') {\r\n    return (this._instances[id] instanceof NgProgressRef) ? this._instances[id].started : empty();\r\n  }\r\n\r\n  completed(id = 'root') {\r\n    return (this._instances[id] instanceof NgProgressRef) ? this._instances[id].ended : empty();\r\n  }\r\n\r\n  destroy(id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].destroy();\r\n      this._instances[id] = null;\r\n    }\r\n  }\r\n\r\n  destroyAll() {\r\n    Object.keys(this._instances).map((key) => {\r\n      this._instances[key].destroy();\r\n      this._instances[key] = null;\r\n    });\r\n  }\r\n}\r\n"
  ],
  "names": [
    "this",
    "_ngProgress",
    "id",
    "color",
    "config",
    "spinner",
    "thick",
    "max",
    "min",
    "speed",
    "trickleSpeed",
    "started",
    "EventEmitter",
    "completed",
    "NgProgressComponent",
    "prototype",
    "ngOnChanges",
    "progressRef",
    "NgProgressRef",
    "setConfig",
    "ngOnInit",
    "_this",
    "ref",
    "state$",
    "pipe",
    "map",
    "state",
    "observers",
    "length",
    "_started$",
    "subscribe",
    "next",
    "_completed$",
    "unsubscribe",
    "complete",
    "enumerable",
    "configurable",
    "_workerSub$",
    "_trickling$",
    "combineLatest",
    "config$",
    "switchMap",
    "_a",
    "_b",
    "o",
    "n",
    "m",
    "Symbol",
    "iterator",
    "r",
    "e",
    "i",
    "call",
    "ar",
    "done",
    "push",
    "value",
    "error",
    "tslib_1.__read",
    "start",
    "latestConfig",
    "Object",
    "defineProperty",
    "get",
    "set",
    "_config",
    "isStarted",
    "inc",
    "amount",
    "_state",
    "_clamp",
    "_setState",
    "active",
    "assign",
    "Math",
    "tap",
    "delay",
    "CONFIG",
    "InjectionToken",
    "defaultConfig",
    "ease",
    "spinnerPosition",
    "direction",
    "NgProgress",
    "_instances",
    "empty",
    "key",
    "destroy",
    "ctorParameters",
    "type",
    "undefined",
    "decorators",
    "Optional",
    "Inject",
    "args"
  ],
  "mappings": "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"
}
